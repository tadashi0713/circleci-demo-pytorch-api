version: 2.1

orbs:
  python: circleci/python@2.0.3
  gcp-gcr: circleci/gcp-gcr@0.15.0

jobs:
  test:
    executor: python/default
    steps:
      - checkout
      - python/install-packages:
          pkg-manager: pipenv
      - run: pipenv run pytest --junitxml=test-results/junit.xml
      - store_test_results:
          path: test-results  

  test_parallel:
    parallelism: 10 # Parallelism
    executor: python/default
    steps:
      - checkout
      - python/install-packages:
          pkg-manager: pipenv
      - run: pipenv run pytest $(circleci tests glob "tests/test_*.py" | circleci tests split --split-by=timings) --junitxml=test-results/junit.xml
      - store_test_results:
          path: report.xml

  test_runner:
    machine: true
    resource_class: tadashi0713/gcp
    steps:
      - checkout
      - run:
          name: Test
          command: |
            source ~/.bashrc
            pipenv --python 3.8
            pipenv install
            pipenv run pytest --junitxml=test-results/junit.xml
      - store_test_results:
          path: test-results

  deploy_cloud_run:
    machine:
      docker_layer_caching: true # Docker Layer Caching
      resource_class: large # Resource Class(Linux VM)
    steps:
      - checkout
      - gcp-gcr/gcr-auth
      - gcp-gcr/build-image:
          image: circleci-demo-pytorch-api
          tag: '${CIRCLE_SHA1}'
          registry-url: asia.gcr.io
      - gcp-gcr/push-image:
          image: circleci-demo-pytorch-api
          tag: '${CIRCLE_SHA1}'
          registry-url: asia.gcr.io

workflows:
  test_and_deploy:
    jobs:
      - test
      - test_parallel:
          requires:
            - test
      - test_runner:
          requires:
            - test
      - deploy_cloud_run:
          context: push-gcr
          requires:
            - test_parallel
            - test_runner

